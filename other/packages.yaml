input_number:
  pumpsteer_aggressiveness:
    name: PumpSteer Aggressiveness
    min: 0
    max: 5
    step: 1
    unit_of_measurement: "level"
    icon: mdi:lightning-bolt-circle
    mode: box

  pumpsteer_summer_threshold:
    name: Summer Mode Threshold
    min: 0
    max: 30
    step: 0.5
    unit_of_measurement: "°C"
    mode: box

  indoor_target_temperature:
    name: Indoor Target Temperature
    min: 0
    max: 27
    step: 0.5
    unit_of_measurement: "°C"
    icon: mdi:thermometer
    mode: box

  house_inertia:
    name: House Inertia
    min: 0.0
    max: 10.0
    step: 0.1
    # unit_of_measurement: "x"  # eller ta bort om du föredrar helt utan
    icon: mdi:home-thermometer
    mode: box
  #######################################################
  integral_temp_error:
    name: "Integral Temperature Error"
    min: -1000
    max: 1000
    step: 0.1
    unit_of_measurement: "°C·h"
    mode: box

  pumpsteer_integral_gain:
    name: "PumpSteer Integral Gain"
    min: 0.0
    max: 1.0
    step: 0.01
    mode: slider
    unit_of_measurement: ""
    icon: mdi:tune
#######################################################
input_text:
  hourly_forecast_temperatures:
    name: Hourly Forecast Temperatures
    max: 255

input_boolean:
  holiday_mode:
    name: Semestermode aktivt
    icon: mdi:beach

input_datetime:
  holiday_start:
    name: Semester börjar
    has_date: true
    has_time: true

  holiday_end:
    name: Semester slutar
    has_date: true
    has_time: true
    
input_select:
  pumpsteer_price_model:
    name: PumpSteer - Prismodell
    options:
      - hybrid
      - percentiles
    initial: hybrid

template:
  - sensor:
      - name: "Real Outdoor Temperature"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Outdoor Temperature') | default(0) }}
        unit_of_measurement: "°C"
        device_class: temperature

      - name: "VirtualOutdoorTemp Tempdiff"
        state: >
          {% set fake = states('sensor.pumpsteer') | float(0) %}
          {% set real = state_attr('sensor.pumpsteer', 'Outdoor Temperature') | default(0) | float %}
          {{ (fake - real) | round(1) }}
        unit_of_measurement: "°C"
        icon: mdi:thermometer-minus

      - name: "PumpSteer Indoor Target Diff"
        state: >
          {% set actual = state_attr('sensor.pumpsteer', 'Indoor Temperature') | default(0) | float %}
          {% set target = state_attr('sensor.pumpsteer', 'Target Temperature') | default(0) | float %}
          {{ (actual - target) | round(1) }}
        unit_of_measurement: "°C"
        icon: mdi:home-thermometer-outline

      - name: "PumpSteer Operating Mode"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Mode') | default('unknown') | title }}
        icon: >
          {% set mode = state_attr('sensor.pumpsteer', 'Mode') %}
          {% if mode == 'preboost' %}
            mdi:flash
          {% elif mode == 'heating' %}
            mdi:fire
          {% elif mode == 'neutral' %}
            mdi:pause-circle
          {% elif mode == 'summer_mode' %}
            mdi:weather-sunny
          {% elif mode == 'braking_mode' or mode == 'braking_by_temp' %}
            mdi:car-brake-alert
          {% else %}
            mdi:help-circle
          {% endif %}

      - name: "PumpSteer Inertia"
        state: "{{ state_attr('sensor.pumpsteer', 'Inertia') | default(0) }}"
        icon: mdi:speedometer
        state_class: measurement

      - name: "PumpSteer Aggressiveness"
        state: "{{ state_attr('sensor.pumpsteer', 'Aggressiveness') | default(0) }}"
        icon: mdi:target
        state_class: measurement

      - name: "PumpSteer Is Preboosting"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Mode') | default('') == 'preboost' }}
        icon: mdi:fire

      - name: "PumpSteer Is Braking"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Mode') | default('') in ['braking_mode', 'braking_by_temp'] }}
        icon: mdi:car-brake-alert

      - name: "PumpSteer Current Price Level"
        unit_of_measurement: "%"
        state: >
          {% set price = state_attr('sensor.pumpsteer', 'Current Price') | default(0) | float %}
          {% set max = state_attr('sensor.pumpsteer', 'Max Price') | default(1) | float %}
          {{ (price / max * 100) | round(0) }}
        icon: mdi:cash-percent
